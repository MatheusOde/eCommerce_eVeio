{"remainingRequest":"D:\\GitHub\\eveio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\eveio\\src\\components\\Checkout\\Checkout.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\GitHub\\eveio\\src\\components\\Checkout\\Checkout.vue","mtime":1638387830134},{"path":"D:\\GitHub\\eveio\\node_modules\\css-loader\\dist\\cjs.js","mtime":1638387816473},{"path":"D:\\GitHub\\eveio\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1638387828928},{"path":"D:\\GitHub\\eveio\\node_modules\\postcss-loader\\src\\index.js","mtime":1638387822892},{"path":"D:\\GitHub\\eveio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638387814253},{"path":"D:\\GitHub\\eveio\\node_modules\\vue-loader\\lib\\index.js","mtime":1638387828927}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2hlY2tvdXQtY2FydC1jb250YWluZXJ7CiAgbWFyZ2luLWJvdHRvbTogNTBweDsKfQoKZm9ybSAucHJvZHV0cyB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KCmZvcm0gLnByb2R1dHMgPiBkaXYgewogIHdpZHRoOiAxMDAlOwp9CgoucHJvY2VlZC10by1wYXltZW50IHsKICB3aWRvd3M6IDEwMCU7CiAgcGFkZGluZzogMCAxcmVtOwp9CgoucHJvY2VlZC10by1wYXltZW50IGJ1dHRvbiB7CiAgaGVpZ2h0OiAzcmVtOwp9CgouZm9ybS1jb250YWluZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9Cg=="},{"version":3,"sources":["Checkout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Checkout.vue","sourceRoot":"src/components/Checkout","sourcesContent":["<template>\r\n  <form class=\"container\">\r\n    <div class=\"container\">\r\n      <div class=\"columns\">\r\n        <div class=\"column form-container\">\r\n          <checkout-form\r\n            :paymentMethod.sync=\"clientData.paymentMethod\"\r\n            :address.sync=\"clientData.address\"\r\n            :city.sync=\"clientData.city\"\r\n            :state.sync=\"clientData.state\"\r\n            :zipCode.sync=\"clientData.zipCode\"\r\n           />\r\n          <divider />\r\n          <finish-by-phone-number />\r\n        </div>\r\n        <div class=\"column\">\r\n          <div class=\"produts\">\r\n            <div class=\"checkout-cart-container\">\r\n              <product-list />\r\n            </div>\r\n            <div class=\"proceed-to-payment\">\r\n              <router-link :to=\"{ name: 'payment' }\">\r\n                <b-button\r\n                  expanded\r\n                  native-type=\"submit\"\r\n                  type=\"is-primary\"\r\n                >\r\n                  Proceder para Pagamento\r\n                </b-button>\r\n              </router-link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport CheckoutForm from '@/components/Checkout/CheckoutForm.vue'\r\nimport Divider from '@/components/Checkout/Divider.vue'\r\nimport FinishByPhoneNumber from '@/components/Checkout/FinishByPhoneNumber.vue'\r\nimport CheckoutInformation from '@/components/Checkout/CheckoutInformation.js'\r\nimport ProductList from '@/components/ShoppingCart/ProductList'\r\n\r\nexport default {\r\n  name: 'Checkout',\r\n  data () {\r\n    return {\r\n      clientData: {\r\n        paymentMethod: undefined,\r\n        address: '',\r\n        city: '',\r\n        state: '',\r\n        zipCode: '',\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    CheckoutForm,\r\n    Divider,\r\n    FinishByPhoneNumber,\r\n    ProductList\r\n  },\r\n  created () {\r\n    const data = CheckoutInformation.getUserData()\r\n    if (Object.keys(data).length > 0) {\r\n      this.clientData.paymentMethod = data.paymentMethod\r\n      this.clientData.address = data.address\r\n      this.clientData.city = data.city\r\n      this.clientData.state = data.state\r\n      this.clientData.zipCode = data.zipCode\r\n    }\r\n  },\r\n  watch: {\r\n    clientData: {\r\n      handler () {\r\n        CheckoutInformation.setUserData({\r\n          paymentMethod: this.clientData.paymentMethod,\r\n          address: this.clientData.address,\r\n          city: this.clientData.city,\r\n          state: this.clientData.state,\r\n          zipCode: this.clientData.zipCode\r\n      })\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  .checkout-cart-container{\r\n    margin-bottom: 50px;\r\n  }\r\n\r\n  form .produts {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  form .produts > div {\r\n    width: 100%;\r\n  }\r\n\r\n  .proceed-to-payment {\r\n    widows: 100%;\r\n    padding: 0 1rem;\r\n  }\r\n\r\n  .proceed-to-payment button {\r\n    height: 3rem;\r\n  }\r\n\r\n  .form-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n</style>"]}]}